<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */
use Drupal\node\NodeInterface;
use \Drupal\Core\Routing;
use Drupal\views\Views;
use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;
use Drupal\file\Entity\File;
use Drupal\core\Url;
use \Drupal\block\Entity\Block;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Link;
use Drupal\Component\Utility\Html;
use Drupal\Core\Breadcrumb\Breadcrumb;
use Drupal\Core\Entity\EntityBase;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\Entity\Node;
use Symfony\Component\HttpFoundation\Request;
use \Drupal\user\Entity\User;

function translate($string) {
  switch ($string) {
    case 'Cães':
      return 'caes';
      break;
    case 'Gatos':
      return 'gatos';
      break;
    default:
      break;
  }
}

function slugify($text, string $divider = '-')
{
  // replace non letter or digits by divider
  $text = preg_replace('~[^\pL\d]+~u', $divider, $text);

  // transliterate
  $text = iconv('utf-8', 'us-ascii//TRANSLIT', $text);

  // remove unwanted characters
  $text = preg_replace('~[^-\w]+~', '', $text);

  // trim
  $text = trim($text, $divider);

  // remove duplicate divider
  $text = preg_replace('~-+~', $divider, $text);

  // lowercase
  $text = strtolower($text);

  if (empty($text)) {
    return 'n-a';
  }

  return $text;
}

function patasdacasa_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['address'] = array(
      '#type' => 'textarea',
      '#title' => t('Endereço'),
      '#default_value' => theme_get_setting('address')
  );
}

function patasdacasa_preprocess_html(&$variables) {
  $config = \Drupal::config('system.site');
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  $variables['site_name'] = $config->get('name');
  $variables['path'] = \Drupal::service('path.current')->getPath();

  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
    $variables['tag'] = explode('/', $variables['path'])[3];
  }

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if($node->hasField('field_tags')) {
      $variables['tag'] = $node->get('field_tags')->target_id;
    }
  }

}

function patasdacasa_preprocess_views_view(&$variables) {
  $view = \Drupal\views\Views::getView($variables['view']->id());

  $view->setDisplay($variables['view']->current_display);

  $displayObj = $view->getDisplay();

  $variables['display_title'] = $displayObj->display['display_title'];
  
  if(isset(\Drupal::request()->query) && isset(\Drupal::request()->query->all()['q'])) {
    $variables['q'] = \Drupal::request()->query->all()['q'];
  }

  if($displayObj->display['id'] == 'block_4' && $variables['view']->id() == 'archive') {
    $variables['tid'] = $variables['view']->args[0];
  } elseif ($displayObj->display['id'] == 'page_1' && $variables['view']->id() == 'author') {
    $variables['uid'] = \Drupal::routeMatch()->getParameters()->get('arg_0');

    $variables['display_title'] = $displayObj->display['display_title'];
    $variables['ids'] = [];

    // $queryByUid = \Drupal::entityQuery('node')->condition('type', 'article');
    // $queryByUid->condition('uid', $variables['uid'], '=');
    // $queryByUid->sort('created', 'DESC');

    // $queryByCustomEditor = \Drupal::entityQuery('node')->condition('type', 'article');
    // $queryByCustomEditor->condition('field_custom_editor', $variables['uid'], '=');
    // $queryByCustomEditor->sort('created', 'DESC');

    // $variables['author_posts'] = array_unique(array_merge($queryByUid->execute(), $queryByCustomEditor->execute()));

    $path = \Drupal::request()->getpathInfo();

    $alias = explode('/', $path)[2];

    $url = Url::fromUri('internal:' . '/' . $alias);

    if ($url->isRouted()) {
      $params = $url->getRouteParameters();
      $entity = \Drupal::entityTypeManager()->getStorage('user')->load($params['user']);
      $user = ['alias' => $alias, 'type' => 'user', 'id' => intval($params['user']), 'entity' => $entity];
      $uid = $user['id'];

      $query = Drupal::entityQuery('node')->condition('type', 'article');

      $group_2 = $query->andConditionGroup()
      ->condition('field_custom_editor', $uid);

      $group_1 = $query->andConditionGroup()
      ->condition('uid', $uid) 
      ->notExists('field_custom_editor');

      $group = $query->orConditionGroup()
      ->condition($group_1)
      ->condition($group_2);

      // ->pager(1)
      $variables['query'] = $query->condition($group)->execute();
      $storage = \Drupal::entityTypeManager()->getStorage('node');
      $nodes = $storage->loadMultiple($variables['query']);

      // $variables['rows'] = $nodes;
    }
  } elseif ($displayObj->display['id'] == 'page_1' && $variables['view']->id() == 'taxonomy_term') {
    $variables['tid'] = $variables['view']->args[0];
  } elseif ($displayObj->display['id'] == 'page_1' && $variables['view']->id() == 'especialista') {
    $variables['tid'] = $variables['view']->args[0];
    $tid = $variables['tid'];
    // $term_obj = Term::load($tid);
    // $variables['field_documento_especialista'] = isset($term_obj->get('field_documento_especialista')->value) ? strip_tags($term_obj->get('field_documento_especialista')->value) : '';
    // $variables['field_cargo_especialista'] = isset($term_obj->get('field_cargo_especialista')->value) ? strip_tags($term_obj->get('field_cargo_especialista')->value) : null;
  } elseif ($displayObj->display['id'] == 'block_1' && $variables['view']->id() == 'author') {
    $variables['uid'] = $variables['view']->args[0];
    // $tid = $variables['tid'];
    // $term_obj = Term::load($tid);
    // $variables['field_documento_especialista'] = strip_tags($term_obj->get('field_documento_especialista')->value);
    // $variables['field_cargo_especialista'] = strip_tags($term_obj->get('field_cargo_especialista')->value);
  }

  $variables['path'] = \Drupal::service('path.current')->getPath();

  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
    $variables['tag'] = explode('/', $variables['path'])[3];
  }

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if($node->hasField('field_tags')) {
      $variables['tag'] = $node->get('field_tags')->target_id;
    }
  }

}

function patasdacasa_preprocess_views_view_unformatted(&$variables) {
  $view = \Drupal\views\Views::getView($variables['view']->id());

  $view->setDisplay($variables['view']->current_display);

  $displayObj = $view->getDisplay();

  $variables['display_title'] = $displayObj->display['display_title'];

  if($displayObj->display['id'] == 'page_2' && $variables['view']->id() == 'taxonomy_term') {
    $view = \Drupal\views\Views::getView($variables['view']->id());

    $view->setDisplay($variables['view']->current_display);

    $displayObj = $view->getDisplay();

    $variables['display_title'] = $displayObj->display['display_title'];

    $vocabulary_name = 'tags';
    $query = \Drupal::entityQuery('taxonomy_term');
    $query->condition('vid', $vocabulary_name);
    $tids = $query->execute();
    $terms = Term::loadMultiple($tids);
    $variables['taxonomies'] = array();

    foreach ($terms as $term) {
      $tid = $term->id();

      $term_obj = Term::load($tid);
      $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($tid);

      if($parent) {
          $parent = reset($parent);
          $ptid = $parent->id();
          $pterm_obj = Term::load($ptid);
      }

      $variables['taxonomies'][] = [
          'tid' => $tid,
          'parent' => $parent ? [
              'tid' => $ptid,
              'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $ptid),
              'name' => $pterm_obj->get('name')->value,
              'description' => strip_tags($pterm_obj->get('description')->value),
              'field_taxonomy_image' => $pterm_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($pterm_obj->get('field_taxonomy_image')->entity->uri->value) : '',
              'field_taxonomy_theme' => $pterm_obj->get('field_taxonomy_theme')->getValue()[0]['color']
          ] : null,
          'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $tid),
          'name' => $term_obj->name->value,
          'description' => strip_tags($term_obj->get('description')->value),
          'type' => $parent ? translate($pterm_obj->get('name')->value) : translate($term_obj->name->value),
          'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
          'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme')->getValue()[0]['color']
      ];
    }
  }
}

function patasdacasa_preprocess_views_view_field(&$variables) {
  $view = $variables['view'];
  $field = $variables['field'];

  if($view && $field) {
    $variables['view_id'] = $view->id();
    $variables['current_display'] = $view->current_display;
    $variables['field_id'] = $field->field;

    if ($view->id() == 'news_hero' || $view->id() == 'news_grid') {
      if($view->current_display == 'block_1') {
        if ($field->field == 'field_tags') {
          $tid = strpos($variables['output'], 'Tags') !== false ? (int)trim(explode('Tags', trim($variables['output']))[1]) : (int)trim($variables['output']);

          $term_obj = Term::load($tid);
          // $term_obj = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
          $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($tid);

          if($parent) {
            $parent = reset($parent);
            $ptid = $parent->id();
            $pterm_obj = Term::load($ptid);
          }

          if($term_obj) {
            $variables['term'][] = [
              'tid' => $tid,
              'parent' => $parent ? [
                'tid' => $ptid,
                'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $ptid),
                'name' => $pterm_obj->get('name')->value,
                'description' => strip_tags($pterm_obj->get('description')->value),
                'field_taxonomy_image' => $pterm_obj->get('field_taxonomy_image')->entity && $pterm_obj->get('field_taxonomy_image')->entity->uri ? file_create_url($pterm_obj->get('field_taxonomy_image')->entity->uri->value) : '',
                'field_taxonomy_theme' => $pterm_obj->get('field_taxonomy_theme')->getValue()[0]['color']
              ] : null,
              'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $tid),
              'name' => $term_obj->get('name')->value,
              'description' => strip_tags($term_obj->get('description')->value),
              'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity && $term_obj->get('field_taxonomy_image')->entity->uri ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
              'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme')->getValue()[0]['color']
            ];
          }
        }
      }
    } elseif ($view->id() == 'archive') {
      if ($field->field == 'field_tags') {
        $tid = strpos($variables['output'], 'Tags') !== false ? (int)trim(explode('Tags', trim($variables['output']))[1]) : (int)trim($variables['output']);

        $term_obj = Term::load($tid);
        // $term_obj = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
        $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($tid);

        if($parent) {
          $parent = reset($parent);
          $ptid = $parent->id();
          $pterm_obj = Term::load($ptid);
        }

        if($term_obj) {
          $variables['term'][] = [
            'tid' => $tid,
            'parent' => $parent ? [
              'tid' => $ptid,
              'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $ptid),
              'name' => $pterm_obj->get('name')->value,
              'field_taxonomy_image' => $pterm_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($pterm_obj->get('field_taxonomy_image')->entity->uri->value) : '',
              'field_taxonomy_theme' => $pterm_obj->get('field_taxonomy_theme')->getValue()[0]['color']
            ] : '',
            'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $tid),
            'name' => $term_obj->get('name')->value,
            'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
            'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme')->getValue()[0]['color']
          ];
        }
      }
    } elseif ($view->id() == 'most_viewed') {
      if ($field->field == 'field_tags') {
        $tid = strpos($variables['output'], 'Tags') !== false ? (int)trim(explode('Tags', trim($variables['output']))[1]) : (int)trim($variables['output']);

        $term_obj = Term::load($tid);
        // $term_obj = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
        $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($tid);

        if($parent) {
          $parent = reset($parent);
          $ptid = $parent->id();
          $pterm_obj = Term::load($ptid);
        }

        if($term_obj) {
          $variables['term'][] = [
            'tid' => $tid,
            'parent' => $parent ? [
              'tid' => $ptid,
              'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $ptid),
              'name' => $pterm_obj->get('name')->value,
              'field_taxonomy_image' => $pterm_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($pterm_obj->get('field_taxonomy_image')->entity->uri->value) : '',
              'field_taxonomy_theme' => $pterm_obj->get('field_taxonomy_theme')->getValue()[0]['color']
            ] : '',
            'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $tid),
            'name' => $term_obj->get('name')->value,
            'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
            'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme')->getValue()[0]['color']
          ];
        }
      }
    }
  }

}

function patasdacasa_theme_suggestions_views_view_field_alter(array &$suggestions, array &$variables, $hook)
{
    if ($variables['view']->id() && $variables['view']->current_display) {
        $suggestions[] = $hook . '__' . $variables['view']->id() . '__' . $variables['view']->current_display . '__' . $variables['field']->field;
    }
}

function patasdacasa_preprocess_node(&$variables) {
  $node = $variables['node'];

  if($node && $node->bundle() == 'article') {
    $cid = $node->get('field_custom_editor') && isset($node->get('field_custom_editor')->getValue()[0]) ? $node->get('field_custom_editor')->getValue()[0]['target_id'] : '';
    $uid = $node->getOwnerId();
    $user = User::load($cid ? $cid : $uid);

    $variables['author'] = [
      // 'object' => $user,
      'uid' => $user->id(),
      'slug' =>  str_replace('/','',\Drupal::service('path_alias.manager')->getAliasByPath('/user/'.$user->id())),
      'author_picture' => !$user->user_picture->isEmpty() ? file_create_url($user->user_picture->entity->getFileUri()) : null,
      'field_user_fullname' => $user->field_user_fullname->value,
      'field_user_social_role' => $user->field_user_social_role->value,
      'field_user_description' => $user->field_user_description->value
    ];

    if($node->get('field_especialista') && $node->get('field_especialista')->getValue()) {
        $tid = $node->get('field_especialista')->getValue()[0]['target_id'];
        $term_obj = Term::load($tid);

        if($term_obj) {
          $variables['especialista'] = [
            'tid' => $tid,
            'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $tid),
            'slug' => str_replace('/','',\Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $tid)),
            'name' => $term_obj->get('name')->value,
            'description' => strip_tags($term_obj->get('description')->value),
            'field_documento_especialista' => $term_obj->get('field_documento_especialista')->value,
            'field_cargo_especialista' => $term_obj->get('field_cargo_especialista')->value,
            'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
            'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme') !== NULL ? $term_obj->get('field_taxonomy_theme')->getValue()[0]['color'] : ''
          ];
        }
    }

    if($node->get('field_tags')) {
        $tid = $node->get('field_tags')->getValue()[0]['target_id'];
        $term_obj = Term::load($tid);
        // $term_obj = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
        $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($tid);

        if($parent) {
          $parent = reset($parent);
          $ptid = $parent->id();
          $pterm_obj = Term::load($ptid);
        }

        if($term_obj) {
          $variables['term'] = [
            'tid' => $tid,
            'parent' => $parent ? [
              'tid' => $ptid,
              'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $ptid),
              'name' => $pterm_obj->get('name')->value,
              'field_taxonomy_image' => $pterm_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($pterm_obj->get('field_taxonomy_image')->entity->uri->value) : '',
              'field_taxonomy_theme' => $pterm_obj->get('field_taxonomy_theme')->getValue()[0]['color']
            ] : '',
            'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $tid),
            'name' => $term_obj->get('name')->value,
            'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
            'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme')->getValue()[0]['color']
          ];
        }
    }
  } 
}

function patasdacasa_preprocess_page(&$variables) {
  $config = \Drupal::config('system.site');
  $variables['logo'] = '/'.\Drupal::config('patasdacasa.settings')->get('logo.path');
  $variables['site_name'] = $config->get('name');
  $variables['is_tax'] = \Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical';
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  $node = \Drupal::routeMatch()->getParameter('node');
  $variables['node_tags'] = [];
  $variables['path'] = \Drupal::service('path.current')->getPath();
  $block_entity = Drupal\block_content\Entity\BlockContent::load(13);
  $block_view = \Drupal::entityTypeManager()->getViewBuilder('block_content')->view($block_entity, 'DISPLAY_VIEW_NAME');
  $variables['tax_filter'] = ['#markup' => render($block_view)];

  # custom code #
  $variables['current_uri']  = \Drupal::request()->getRequestUri();

  
  if ($node) {
    if($node->hasField('field_tags')) {
      $terms = $node->get('field_tags')->referencedEntities();
      if($terms ) {
        foreach ($terms as $term) {
          $term_obj = Term::load($term->tid->value);
          if($term_obj) {
            $variables['node_tags'][] = [
              'tid' => $term->tid->value,
              'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $term->tid->value),
              'name' => $term->name->value,
              'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
              'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme')->getValue()[0]['color']
            ];
          }
        }
      }
    }
  } elseif($variables['is_tax']) {
    if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
      $variables['term_id'] = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
      $variables['term_obj'] = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($variables['term_id']);

      $variables['term'] = [
        'tid' => $variables['term_id'],
        'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $variables['term_id']),
        'name' => $variables['term_obj']->name->value,
        'field_taxonomy_image' => $variables['term_obj']->get('field_taxonomy_image')->entity !== NULL ? file_create_url($variables['term_obj']->get('field_taxonomy_image')->entity->uri->value) : '',
        'field_taxonomy_theme' => $variables['term_obj']->get('field_taxonomy_theme')->getValue()[0]['color']
      ];
    }
  }
}

function patasdacasa_preprocess(&$variables) {
  $variables['keyword'] = \Drupal::request()->query->get('keys');
}

function patasdacasa_form_search_form_alter(&$form, &$form_state) {
  $path = \Drupal::service('path.current')->getPath();

  if(strpos($path, 'search') !== false) {
    $form['#access'] = FALSE;
  }
}

// function patasdacasa_preprocess_breadcrumb(&$variables){
//   $node = \Drupal::routeMatch()->getParameter('node');
  
//   if($node){
//     $variables['nodetype'] = $node->getType();
//     $variables['nodetitle'] = $node->getTitle();
//   }
// }

function patasdacasa_preprocess_views_view__archive__page_3(&$variables){
  $variables['days'] = [];
  $variables['path'] = \Drupal::service('path.current')->getPath();
  $variables['current_month'] = explode('/', $variables['path'])[3];

  foreach ($variables['view']->result as $key => $value) {
    $date = $value->_entity->getCreatedTime();

    if(!in_array(\Drupal::service('date.formatter')->format($date, 'custom', 'd'), $variables['days'], true)){
      array_push($variables['days'], \Drupal::service('date.formatter')->format($date, 'custom', 'd'));
    }
  }
}

function patasdacasa_preprocess_block(&$variables) {
  $variables['address'] = theme_get_setting('address');
  $variables['configuration'] = $variables['elements']['#configuration'];
  $variables['block_title'] = $variables['configuration']['label'];
  $variables['#cache']['max-age'] = 0;

  if($variables['elements']['#id'] == 'homequiz') {
    $node = \Drupal::routeMatch()->getParameter('node');

    if($node) {
      if(slugify($node->title->value) == 'home'){
        $node = Node::load(1);
        $variables['quizid'] = $node->field_page_quiz->target_id;
      } else {
        $variables['quizid'] = false;
      }
    }
  }elseif($variables['elements']['#id'] == 'custombreadcrumb') {
    $route = \Drupal::routeMatch();
    $node = $route->getParameter('node');    
    $variables['current_uri'] = \Drupal::service('current_route_match')->getRouteName();
    $variables['node'] = $route->getParameter('node');    
    $variables['params'] = \Drupal::routeMatch()->getParameters();
    $variables['param'] = \Drupal::routeMatch()->getParameters()->get('arg_0');

    if($variables['node']) {
      $terms = [];

      $query = \Drupal::database()
        ->select('taxonomy_index', 'ti')
        ->fields('ti', ['tid'])
        ->condition('nid', $variables['node']->id());
      
      $results = $query->execute()->fetchCol();
      
      $tids = \Drupal::entityTypeManager()
        ->getStorage('taxonomy_term')
        ->loadMultiple($results);
      
      $terms = [];
      
      foreach ($tids as $term) {
        $terms[] = [
          'tid' => $term->id(), 
          'name' => $term->label()
        ];
      }    
  
      $variables['terms'] = $terms;
    }

  }
}

function patasdacasa_preprocess_block_content(&$variables) {
  $blockType = $variables['elements']['#block_content']->bundle();
  $entity = $variables['elements']['#block_content'];

  $blocks = \Drupal\block\Entity\Block::loadMultiple();

  foreach ($blocks as $key => $block) {
    $uuid = $block->getPlugin()->getDerivativeId();

    if($uuid) {
      $block_content = \Drupal::service('entity.repository')->loadEntityByUuid('block_content', $uuid);

      if($block_content == $entity) {
        $settings = $block->get('settings');
        $variables['label_display'] = $settings['label_display'];
        $variables['label'] = $settings['label'];

        if($block_content->field_field_grid_view_more && isset($block_content->field_field_grid_view_more)) {
          $variables['field_field_grid_view_more'] = [
            'uri' => $block_content->field_field_grid_view_more->getValue()[0]['uri'],
            'label' => $block_content->field_field_grid_view_more->getValue()[0]['title']
          ];
        }
      }
    }
  }

  if ($blockType === 'featured_content_grid') {
    $articles = [];

    if($entity->get('field_featured_content_grid_post') && $entity->get('field_featured_content_grid_post')->getString()) {
      $arr = explode(',', $entity->get('field_featured_content_grid_post')->getString());

      for ($i=0; $i < count($arr); $i++) {
        $nid = (int)trim($arr[$i]);

        $node = \Drupal\node\Entity\Node::load($nid);

        $terms = $node->get('field_tags')->referencedEntities();
        $tags = [];

        foreach ($terms as $term) {
          $term_obj = Term::load($term->tid->value);
          $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($term->tid->value);

          if($parent) {
            $parent = reset($parent);
            $ptid = $parent->id();
            $pterm_obj = Term::load($ptid);
          }

          $tags[] = [
            'tid' => $term->tid->value,
            'parent' => $parent ? [
                'tid' => $ptid,
                'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $ptid),
                'name' => $pterm_obj->get('name')->value,
                'field_taxonomy_image' => $pterm_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($pterm_obj->get('field_taxonomy_image')->entity->uri->value) : '',
                'field_taxonomy_theme' => $pterm_obj->get('field_taxonomy_theme')->getValue()[0]['color']
            ] : '',
            'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $term->tid->value),
            'name' => $term_obj->name->value,
            'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
            'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme')->getValue()[0]['color']
          ];
        }

        $articles[] = [
          'nid' => $nid,
          'title' => $node->title->value,
          'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/node/'.$nid),
          'terms' => $tags,
          'image' => isset($node->field_image) && $node->field_image->entity ? file_create_url($node->field_image->entity->getFileUri()) : ''
        ];
      }

      $variables['articles'] = $articles;
    }
  }

  /**
  * Carregar Quiz na Home pelo block para organizar CTA
  * TODO: rever de criar um bloco especifico de melhoria
  */

  $vocabulary_name = 'tags';
  $query = \Drupal::entityQuery('taxonomy_term');
  $query->condition('vid', $vocabulary_name);
  $tids = $query->execute();
  $terms = Term::loadMultiple($tids);
  $variables['taxonomies'] = array();
  $groupBy = [];

  foreach ($terms as $term) {
    

    $tid = $term->id();

    $term_obj = Term::load($tid);
    $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($tid);

    if($parent) {
        $parent = reset($parent);
        $ptid = $parent->id();
        $pterm_obj = Term::load($ptid);
    }

    $variables['taxonomies'][] = [
        'tid' => $tid,
        'parent' => $parent ? [
            'tid' => $ptid,
            'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $ptid),
            'name' => $pterm_obj->get('name')->value,
            'field_taxonomy_image' => $pterm_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($pterm_obj->get('field_taxonomy_image')->entity->uri->value) : '',
            'field_taxonomy_theme' => $pterm_obj->get('field_taxonomy_theme')->getValue()[0]['color']
        ] : null,
        'url' => \Drupal::service('path_alias.manager')->getAliasByPath('/taxonomy/term/' . $tid),
        'name' => $term_obj->name->value,
        'type' => slugify($parent ? $pterm_obj->get('name')->value : $term_obj->name->value, '_'),
        'field_taxonomy_image' => $term_obj->get('field_taxonomy_image')->entity !== NULL ? file_create_url($term_obj->get('field_taxonomy_image')->entity->uri->value) : '',
        'field_taxonomy_theme' => $term_obj->get('field_taxonomy_theme')->getValue()[0]['color']
    ];
  }

  $variables['taxonomies'] = array_filter($variables['taxonomies'], function($item) {
    if(str_contains($item['name'], 'Castrado') ||
      str_contains($item['name'], 'Idoso') ||
      str_contains($item['name'], 'Filhote') ||
      str_contains($item['name'], 'Adulto')) {
      return true;
    }
    return false;
  });

  foreach($variables['taxonomies'] as $tax) {
    $groupBy[$tax['type']][] = $tax;
  }

  $variables['taxonomies'] = $groupBy;


}

function patasdacasa_form_search_block_form_alter(&$form, &$form_state, $form_id) {
    $form['actions']['submit']['#attributes']['class'][] = 'fas fa-search';
    $form['actions']['submit']['#value'] = FALSE;
    $form['#action'] = '/pesquisar';
    $form['keys']['#attributes']['placeholder'] = t('Digite sua busca');
    $form['keys']['#attributes']['name'] = t('q');
    $form['keys']['#attributes']['required'] = TRUE;
}

function patasdacasa_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  if (isset($variables['attributes']['block'])) {
    $hook = str_replace(array('block-', '-'), array('', '_'), $variables['attributes']['block']);
    $suggestions[] = $variables['theme_hook_original'] . '__' . $hook;
  }
}

function patasdacasa_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['#attributes'] = array('class' => 'wrapper-form form');

  if ($form_id == 'user_login_form' || $form_id == 'user_login' || $form_id == 'user_login_block') {
    $form['name']['#attributes']['placeholder'] = t('Usuário');
    $form['pass']['#attributes']['placeholder'] = t('Senha');
    $form['actions']['submit']['#value'] = 'Entrar';
  }
}

function patasdacasa_preprocess_paragraph(&$variables) {
  if ($route = \Drupal::request()->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
    $variables['title'] = \Drupal::service('title_resolver')->getTitle(\Drupal::request(), $route);
  }
}

function patasdacasa_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if($node) {
    $content_type = $node->bundle();
    $suggestions[] = 'node__'.$content_type.'__'.slugify($node->title->value);
  }
}

function patasdacasa_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if($node) {
    $suggestions[] = 'page__'.slugify($node->title->value);
  }
}

function patasdacasa_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if($node) {
    $content_type = $node->bundle();
    $suggestions[] = 'views_view__'.$content_type;
    $suggestions[] = 'views_view__'.slugify($node->title->value);
  }
}

function patasdacasa_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if($node) {
    $content_type = $node->bundle();
    $suggestions[] = 'views_view_unformatted__'.$content_type;
    $suggestions[] = 'views_view_unformatted__'.slugify($node->title->value);
  }
}

// function patasdacasa_menu_breadcrumb_alter(&$active_trail, $item) {
//   dump($item);
// }